#!/usr/bin/env python3

import sys
import os
from os import path
import io
import shutil
import argparse
import glob
import subprocess
from subprocess import PIPE

def usage():
    print("""python_clean [prefix]

    Clean the current package and associated package path of everything to do with a particular package (prefix)

    If the prefix is not given, assume the current directory name is the prefix.

    """)

def clean_it(argv):

    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--prefix", help="Specify package prefix")

    args = parser.parse_args()

    # Scope variable
    package_prefix = None

    cwd = os.getcwd()
    if args.prefix:
        package_prefix = args.prefix
    else:
        cwd_basename = path.basename(cwd)
        package_prefix = cwd_basename

    # Check current directory and one level up
    dirs_to_remove = ['build', 'dist', '../build', '../dist']
    dirs_to_remove.extend(glob.glob("*egg-info"))
    # Limit to *egg_info that belongs to this package
    more_egg_info_dirs = list(filter(lambda x: package_prefix in x, 
                                     glob.glob("../*egg-info")))
    
    dirs_to_remove.extend(more_egg_info_dirs)
    for subdir in dirs_to_remove :
        full_path = path.join(cwd,subdir)
        if path.isdir(full_path):
            shutil.rmtree(full_path)

    cache_files = glob.glob("../*pycache*", recursive=True)
    for cache_file in cache_files:
        os.remove(cache_file)

    #cmd = "/usr/local/bin/python_clean_path --prefix {0}".format(package_prefix)
    cmd = "/usr/local/bin/python_clean_path"
    cmd_arr = cmd.split(" ")
    #completed_subprocess = subprocess.run(cmd_arr, capture_output=True, text=True)
    proc = subprocess.Popen(cmd_arr, stdout=PIPE, stderr=PIPE, universal_newlines=True)
    proc_stdout, proc_stderr = proc.communicate()

    if proc_stdout:
        print(proc_stdout)
    if proc_stderr:
        print(proc_stderr)




if __name__ == "__main__":
    clean_it(sys.argv[1:])
    sys.exit(0)